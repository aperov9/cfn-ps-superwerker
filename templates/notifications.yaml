AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: Sets up notifications. (qs-1s3rsr7mk)
Metadata:
  cfn-lint:
    config:
      ignore_checks:
        - E9007
Parameters:
  NotificationsMail:
    Type: String
Outputs:
  NotificationTopic:
    Description: Notification topic ARN for ops center creation events
    Value:
      Ref: NotificationTopic
Resources:
  NotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        - Endpoint:
            Ref: NotificationsMail
          Protocol: email
  NotificationOpsItemCreated:
    Type: AWS::Serverless::Function
    Properties:
      Events:
        Enable:
          Type: CloudWatchEvent
          Properties:
            Pattern:
              source:
                - aws.ssm
              detail-type:
                - AWS API Call via CloudTrail
              detail:
                eventName:
                  - CreateOpsItem
                eventSource:
                  - ssm.amazonaws.com
      Handler: index.handler
      Runtime: python3.7
      Policies:
        - SNSPublishMessagePolicy:
            TopicName:
              Fn::GetAtt:
                - NotificationTopic
                - TopicName
      Environment:
        Variables:
          TOPIC_ARN:
            Ref: NotificationTopic
      InlineCode:
        Fn::Sub: "import boto3\nimport json\nimport os\n\nclient = boto3.client('sns')\n\ndef handler(event, context):\n  id = event['detail']['responseElements']['opsItemId']\n  desc = event['detail']['requestParameters']['description']\n\
          \  title = event['detail']['requestParameters']['title']\n\n  url = \"https://${AWS::Region}.console.aws.amazon.com/systems-manager/opsitems/{}\".format(id)\n\n  log({\n    'desc': desc,\n   \
          \ 'event': event,\n    'level': 'info',\n    'msg': 'Publishing new ops item event from CloudTrail to SNS',\n    'title': title,\n    'url': url,\n  })\n\n  message_title = \"New OpsItem: {}\"\
          .format(title)\n  message_body = \"{}\\n\\n{}\".format(desc, url)\n\n  client.publish(\n    Message=message_body,\n    Subject=message_title,\n    TopicArn=os.environ['TOPIC_ARN'],\n  )\n\ndef\
          \ log(msg):\n  print(json.dumps(msg), flush=True)"
